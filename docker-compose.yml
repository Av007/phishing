services:
  management:
    build:
      context: .
      dockerfile: apps/management/Dockerfile
      target: production
    container_name: management
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - kafka
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - MONGO_URI=mongodb://mongo:27017/test
      - DATABASE_URL=mongodb://mongo:27017
      - DATABASE_NAME=test 
    networks:
      - app-network

  simulation:
    build:
      context: .
      dockerfile: apps/simulation/Dockerfile
      target: production
    container_name: simulation
    ports:
      - "4000:3000"
    depends_on:
      - mongo
      - kafka
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - MONGO_URI=mongodb://mongo:27017/test
      - DATABASE_URL=mongodb://mongo:27017
      - DATABASE_NAME=test
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    ports:
      - "27017:27017"

  kafka:
    image: apache/kafka-native
    hostname: broker
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - app-network
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: kafbat/kafka-ui:main
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
